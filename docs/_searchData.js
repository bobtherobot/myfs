var SearchData = {
	"myfs.dirutils": "dirutils : collection utilities manipulating directories syncronouslydirutils myfs",
	"myfs.dirutils.makedir": "makedir : Creates folder specified location folder heirarchy constructed needed example folder exists here path folder following folders exists path folder three Then three tree will constructed inside path foldermakedir destination folder create",
	"myfs.dirutils.readExt": "readExt : Collects files from folder based specified extension extensions used search recursively through folders search multiple extensions Provided shortcut readdir readdir with your extension checking filterreadExt path search extension look search multiple extensions array Find matching files folders function filter items signature this function arguments isFolder boolean Whether item folder file string file stats object Info file such time Node statSync https nodejs html class stats pathInfo object Since already parsing path path parse path parse sending results thsi object resulting array contains only files that mathc specified extension",
	"myfs.dirutils.readdir": "readdir : Read folder returns object containing files folder arraysreaddir path folder read custom filter funciton should return boolean inclusion function will arguments following signature filter isFolder boolean file string stats instance Node statSync Node statSync https nodejs html class stats Should retrieve folders Used internally store recursive findings Note that also provide this argument readdir will populate your existing files folder list recommended leave this argument alone object containing list files folders properties returned list where each array contents readdir path folder null true yeids contents files path folder path folder path folder path folder sub1 path folder sub2 path folder sub3 dirs path folder sub1 path folder sub2 path folder sub3",
	"myfs.dirutils.copydir": "copydir : Copies entire folder heirarchy folder from location another other location doesn exists will constructedcopydir source folder destination folder created exist",
	"myfs.dirutils.emptydir": "emptydir : Recursively empties folder contents folder contents leaves source folderemptydir source folder Prevents actual deletion still allows return list display what will deleted array containing list paths files folders that deleted will deleted when dryrun true",
	"myfs.dirutils.removedir": "removedir : Recursively removes folder folders wellremovedir path folder Prevents actual deletion still allows return return list items that will deleted array items that were deleted will deleted dryrun true",
	"myfs.dirutils.exists": "exists : Checks folder existsexists path folder",
	"myfs.dirutils.mkdir": "mkdir : Alias makedir makedir",
	"myfs.dirutils.cp": "cp : Alias copydir copydir",
	"myfs.dirutils.copy": "copy : Alias copydir copydir",
	"myfs.dirutils.list": "list : Alias readdir readdir",
	"myfs.dirutils.listExt": "listExt : Alias readExt readExt",
	"myfs.dirutils.isFolder": "isFolder : Alias exists exists",
	"myfs.dirutils.isDir": "isDir : Alias exists exists",
	"documon.Access": "Access : Toggles member parts inheritance private public protected menu pages This class serves dual purpose loaded main index html page well individual pages that loaded into main page Since individual pages loaded iframes messaging system communicate between index content pagesAccess documon",
	"documon.Access.applyAccess": "applyAccess : Applies access current page When showQuery hideQuery provided then these will used apply access when provided previous values will used Generallly index page defines showQuery hideQuery values checkbox actions content pages rely sending arguments function apply access pageapplyAccess string selector querySelectorAll hideQuery",
	"documon.Access.clickAccess": "clickAccess : checkbox action handlerclickAccess window event",
	"documon.Access.setAccess": "setAccess : Generates selector strings showing hiding members query based HTML tags that have data attributes that match value boolena type access values such public private protected boolean access such inherits just checks data inherits attribute existssetAccess true when want show memebers that inherited true when want show memebers that private true when want show memebers that protected",
	"documon.Access.restoreChecked": "restoreChecked : Restores checkboxes value used last visit",
	"documon.Access.init": "init : startup initializer",
	"documon.Access.receiveMessage": "receiveMessage : handler pinged when content page loaded check what access whoudl pagereceiveMessage message object",
	"root.sort_by": "sort_by : sort field FunctionExpression",
	"root.Draggable": "Draggable : Makes Element draggable NOTE This stand alone implementation jbeeb utils Draggable class used jbeeb objects Whereas this class used element outside jbeebDraggable Configuration settings myDrag documon Draggable target callback constrain constrainRect threshold",
	"root.Draggable.setX": "setX : Shortcut style positionsetX element move position pixels",
	"root.Draggable.setY": "setY : Shortcut style positionsetY element move position pixels",
	"root.Draggable.setXY": "setXY : Shortcut style positionsetXY element move position pixels position pixels",
	"root.Draggable.parsePos": "parsePos : Gets position releative ElementparsePos element",
	"root.Draggable.init": "init : init main class description details",
	"root.Draggable.callback": "callback : function ping when operation occurscallback internal object manage object with following properties left kind operation that occured start move Indicates item simply clicked dragged Only issued when event argument that defined during initialization",
	"root.Draggable._down": "_down : mouse down listener function",
	"root.Draggable._initMove": "_initMove : time setup extablish starting position create mask maksinitMove Transfered from move listener",
	"root.Draggable._move": "_move : mouse move listener function",
	"root.Draggable._up": "_up : mouse listener function",
	"root.Draggable.setConstrainRect": "setConstrainRect : Sets rectangle used boundaries that item move withinsetConstrainRect object containing following properties width height null argument clear contstraint",
	"root.Draggable.setConstrain": "setConstrain : Causes movement contrained along axissetConstrain null argument clear contstraint",
	"root.Draggable.destroy": "destroy : Destroys removes listeners",
	"root.Draggable._target": "_target : object going dragobject going drag",
	"root.Draggable._callback": "_callback : Configured callbackConfigured callback",
	"root.Draggable._callbackArg": "_callbackArg : Configured argument send callback callbackConfigured argument send callback callback",
	"root.Draggable._didMoveThreshold": "_didMoveThreshold : pixel threshold issuing didMove flagpixel threshold issuing didMove flag",
	"root.Draggable._down_bound": "_down_bound : down bounddown bound",
	"root.Draggable._move_bound": "_move_bound : move boundmove bound",
	"root.Draggable._mask": "_mask : overlay masking object used reject mouse events underlaying elementsoverlay masking object used reject mouse events underlaying elements",
	"documon.Main": "Main : main entry point initializing other classesMain documon",
	"documon.Main.init": "init : Called DOMContentReady listener window once page fully loaded Initilizes MenuTree PageManager loads previously loaded pages",
	"documon.Search": "Search : Provides search mechanism across documentationSearch documon",
	"gieson.Storage": "Storage : convienence methods localStorageStorage gieson",
	"gieson.Storage.setStore": "setStore : Stores data store string number boolean objectssetStore name thing store this later actual thing store",
	"gieson.Storage.getStore": "getStore : Retrieves item from browser local storagegetStore name thing want stored data",
	"gieson.MenuTree": "MenuTree : Builds menu based menu array menu array must conform following structure myMenuData Unique used identify menu list item html optional open when menu item clicked label display text menu item kind myCssRule class apply item good including icons children array menu item just like this When item children menu will constructed immediate nextSibling which will house items within children array Thus have many menus needed menu will build using following HTML structure opener used open close next immediate sibling opener used open close next immediate sibling opener used open close next immediate siblingMenuTree gieson only action ping select function opHandler action item action select sole item myMenu gieson MenuTree callback opHandler menuData MenuData MenuData should located window object since loaded script menuData",
	"gieson.MenuTree.toggleClick": "toggleClick : Used toggle mouse click Toggles item open closed prevents further mouse bubblingtoggleClick mouse event object menu item",
	"gieson.MenuTree.toggle": "toggle : Toggles item open closedtoggle toggle menu item",
	"gieson.MenuTree.selectClick": "selectClick : Opens highlights item menu when user physically clicksselectClick mouse event object menu item",
	"gieson.MenuTree.select": "select : Opens highlights item menuselect select menu item",
	"gieson.MenuTree.openById": "openById : Opens decendants branchopenById openById menu item Should item highlighted Should menu scroll show item item source data provided during init",
	"gieson.MenuTree.getDataById": "getDataById : Gets item source data provided during init Convient retrive source data without navigating source tree becuase maintain flat list cross reference This methods simply hooks into cross referencegetDataById getDataById menu item item source data provided during init",
	"gieson.MenuTree.listdata": "listdata : TODO should convert items store list seperate class berevity just inlined during development data store each menu item keys listData refer item Each item consists following item Optional will assigned unique none children list other items access Specific documon inherits Specific documon kind Applies class item label What user sees This created managed MenuTree miid Menu item liid actual HTML element created this item ulid parent element this child this open boolean Current state parentMiid parent menu item openerid opener element liElem actual element only stored when interacted with ulElem actual parent element only stored when interacted with openerElem actual opener triangle element only stored when interacted with ulOriginalDisplay source node original style display kind open close back normal defaults block when",
	"myfs.fileutils": "fileutils : collection basic common simplified syncronous file methodsfileutils myfs",
	"myfs.fileutils.copy": "copy : Copies file from location another Will also copy folder provided folder this just convieneince recommend using copy directlycopy source file path destination copy source this binary file assume text file",
	"myfs.fileutils.ensureParentExists": "ensureParentExists : Ensures file parent folder exists when attempt write there folder write into associated mkdir constructs entire heirarchy neededensureParentExists path",
	"myfs.fileutils.isFile": "isFile : Validates file exists that folder folder this method will yeil falseisFile source file path",
	"myfs.fileutils.Open": "Open : Reads entire file string NOTE This alias read readOpen source file path description",
	"myfs.fileutils.read": "read : Reads entire file stringread source file path this binary file assume text file",
	"myfs.fileutils.save": "save : Alias write write",
	"myfs.fileutils.write": "write : Saves text data file Overwrites entire file with provided datawrite source file path text data save this binary file assume text file Honors string binary just boolean string only binary recognized anything other than binary will default down",
	"myfs.fileutils.remove": "remove : Deletes file from systemremove source file path",
	"myfs.fileutils.exists": "exists : Checks file exists Note this also checks folder same name existsexists source file path True exists false file folder exists",
	"myfs.fileutils.rename": "rename : Renames moves file folderrename source file path destination file path",
	"myfs.fileutils.touch": "touch : Creates updates timestamp specific file folder specify that want touch directory include trailing slash path isFolder argument true otherwise assume your toughing filetouch file folder path Whether your trying touch folder trailing slash path assume isFolder true specify specific date Date object otherwise time used",
	"myfs.fileutils.cp": "cp : Alias copy copy",
	"myfs.fileutils.open": "open : Alias read read",
	"myfs.fileutils.move": "move : Alias rename rename",
	"root.launch": "launch : file launcher Opens stuff like websites files executables Cross platform Using https github sindresorhuslaunch open Example path track will open default media player Options myfs details",
	"root.makedir": "makedir : Creates folder specified location folder heirarchy constructed needed Alias makedir myfs dirutils makedirmakedir destination",
	"root.cpdir": "cpdir : Copies entire folder heirarchy folder from location another other location doesn exists will constructed Alias copydir myfs dirutils copydircpdir source folder destination folder created exist",
	"root.rmdir": "rmdir : Recursively removes folder folders well Alias copydir myfs dirutils removedirrmdir path folder Prevents actual deletion still allows return return list items that will deleted array items that were deleted will deleted dryrun true",
	"root.list": "list : Read folder returns object containing files array dirs array with full system paths files path file1 path file2 path file3 dirs path folder1 path folder2 path folder3 Alias copydir myfs dirutils readdirlist path folder read custom filter funciton should return boolean inclusion function will arguments following signature filter isFolder boolean file string stats instance Node statSync Node statSync https nodejs html class stats Should retrieve folders Used internally store recursive findings Note that also provide this argument readdir will populate your existing files folder list recommended leave this argument alone object containing list files folders properties returned list where each array contents readdir path folder null true yeids contents files path folder path folder path folder path folder sub1 path folder sub2 path folder sub3 dirs path folder sub1 path folder sub2 path folder sub3",
	"root.ls": "ls : alias list listalias list list",
	"root.listExt": "listExt : Collects files from folder based specified extension extensions used search recursively through folders search multiple extensions Provided shortcut readdir readdir with your extension checking filter Alias copydir myfs dirutils readExtlistExt path search extension look search multiple extensions array Find matching files folders resulting array contains only files that mathc specified extension",
	"root.empty": "empty : Recursively empties folder contents folder contents leaves source folder Alias copydir myfs dirutils emptyempty source folder Prevents actual deletion still allows return list display what will deleted array containing list paths files folders that deleted will deleted when dryrun true",
	"root.isFolder": "isFolder : dirUtils exists dirUtils exists only validates true folder file exists will STILL return false other words exists doesn conduct global exists Note that fileUtils exists doesalias exists exists",
	"root.isDir": "isDir : alias isFolder isFolderalias isFolder isFolder",
	"root.exists": "exists : Checks file folder exists validate either file folder isFile isFile isDir isDirexists source file path True exists false file folder exists",
	"root.exist": "exist : alias exists exists pluralalias exists exists plural",
	"root.read": "read : Reads data file Alias read myfs readread source file path this binary file assume text file",
	"root.open": "open : alias read readalias read read",
	"root.write": "write : Saves text binary data file Overwrites entire file with provided data Alias write myfs writewrite source file path text data save this binary file assume text file Honors string binary just boolean string only binary recognized anything other than binary will default down",
	"root.save": "save : alias write writealias write write",
	"root.cp": "cp : alias copy copyalias copy copy",
	"root.copy": "copy : Copies file folder from location another Alias copy myfs copycopy source file path destination copy source this binary file assume text file",
	"root.remove": "remove : Deletes file from system Alias remove myfs removeremove source file path",
	"root.rm": "rm : Alias remove removesource file path",
	"root.move": "move : Moves renames file folder Alias rename renamemove source file path destination file path",
	"root.rename": "rename : Moves renames file folder Alias rename renamerename source file path destination file path",
	"root.isFile": "isFile : Validates file exists that folder folder this method will yeil falseisFile source file path",
	"root.touch": "touch : Creates updates timestamp specific file folder specify that want touch directory include trailing slash path isFolder argument true otherwise assume your toughing filetouch file folder path Whether your trying touch folder trailing slash path assume isFolder true specify specific date Date object otherwise time used",
	"root.name": "name : npath namename full path last portion path generally filename without extension",
	"root.basename": "basename : npath basename npath basenamebasename full path Lops extension matches last portion path generally filename",
	"root.filename": "filename : alias basename basenamealias basename basename",
	"root.base": "base : alias name namealias name name",
	"root.parent": "parent : Returns path parent folder that item resides within npath parent npath parent sally yoyo boob sally yoyoparent path parse path file folder",
	"root.dir": "dir : alias dirname dirnamealias dirname dirname",
	"root.ext": "ext : Returns bare base extensionpath parse extension",
	"root.isAbsolute": "isAbsolute : Determines path absolute pathisAbsolute path parse",
	"root.normalize": "normalize : Resolves portions path Reduces double slashes single Forces back slashes forward slashes Retains trailing slash exists npath normalize npath normalize boob boob npath normalize current workingnormalize path parse",
	"root.clean": "clean : Normalizes slashes converting double single based current platform requirements",
	"root.parse": "parse : Extracts basic path file parts path parse home user file Yeilds traditional node proerties root home user base file name file additional brain labels ext2 extension alias basename file filename file parent home userparse path parse object containing following properties root home user base file name file",
	"root.relative": "relative : Creates relative path between from path relative data orandea test data orandea impl Returns implrelative When null used this value When null used this value relative path between from",
	"root.format": "format : opposite path parse Combines elements object into string Example root home user base file name file converted home user fileformat object containing some required keys formulate path string representaiton object",
	"root.join": "join : Joins path segments resolves relativity path join asdf quux Returns asdfjoin arguments evaluated paths construction description",
	"root.resolve": "resolve : Generates absolute path based provided arguments Path construction occurs from right left resolve yields absolute path resolved during construction items left ignored resolve yields ignored absolute path resolved after constructing arguments inserted resolve yields current working Relative paths automatically resolved resolve yieldsresolve arguments evaluated paths construction",
	"root.removeSlash": "removeSlash : Removes trailing slash from path existsremoveSlash path",
	"root.removeTrailingSlash": "removeTrailingSlash : alias removeSlash removeSlashalias removeSlash removeSlash",
	"root.addSlash": "addSlash : Adds trailing slash from path doesn existaddSlash path",
	"root.addTrailingSlash": "addTrailingSlash : alias addSlash addSlashalias addSlash addSlash",
	"root.swapExt": "swapExt : Changes path extension apply basic filename full pathswapExt original path extenion path",
	"root.cwd": "cwd : Returns current working directoryAppends resolves resolve additional context current working directory needed example myfs will back folder example myfs will tack onto system path resolved path",
	"root.du": "du : access underlaying directory utility myfs dirutil class access additional methods that commonaccess underlaying directory utility myfs dirutil class access additional methods that common",
	"root.fu": "fu : access underlaying file utility myfs fileutil class access additional methods that commonaccess underlaying file utility myfs fileutil class access additional methods that common",
	"root.path": "path : access underlaying path utility myfs npath class access additional methods that commonaccess underlaying path utility myfs npath class access additional methods that common",
	"root.sep": "sep : kind seperator used paths Windows POSIXkind seperator used paths Windows POSIX",
	"root.delimiter": "delimiter : Platform environment PATH delimiter Example PATH appears Windows Windows system32 Windows Program Files node Example PATH appears POSIX systems Unix sbin sbin local Read PATH with Node console process PATH Windows POSIX",
	"myfs.log": "log : Writes console Will accept object array well string boolena other prepare them proper presentation consolemyfs string array object output title message Disables logging prevents console output require Some Title false prints Some Title",
	"myfs.npath": "npath : drop replacement path that provides cross playform normalization Easing development cross platform modules Essentially what doing processing methods with path normalization always enforcing forward slashesnpath myfs",
	"myfs.npath.clean": "clean : Normalizes slashes converting double single based current platform requirements",
	"myfs.npath.basename": "basename : npath basename npath basenamebasename full path Lops extension matches last portion path generally filename",
	"myfs.npath.name": "name : npath namename full path last portion path generally filename without extension",
	"myfs.npath.dirname": "dirname : Returns path parent folder that item resides within npath dirname npath dirname sally yoyo boob sally yoyodirname path parse path file folder",
	"myfs.npath.extname": "extname : this includes npath extname npath extname sally yoyo boobextname path parse extension exists including",
	"myfs.npath.ext": "ext : Just bare base extensionpath parse extension",
	"myfs.npath.isAbsolute": "isAbsolute : Determines path absolute pathisAbsolute path parse",
	"myfs.npath.normalize": "normalize : Resolves portions path Reduces double slashes single Forces back slashes forward slashes Retains trailing slash exists npath normalize npath normalize boob boob npath normalize current workingnormalize path parse",
	"myfs.npath.parse": "parse : Extracts basic path file parts path parse home user file Yeilds traditional node proerties root home user base file name file additional brain labels ext2 extension alias basename file filename file parent home userparse path parse object containing following properties root home user base file name file",
	"myfs.npath.relative": "relative : Creates relative path between from path relative data orandea test data orandea impl Returns implrelative When null used this value When null used this value relative path between from",
	"myfs.npath.format": "format : opposite path parse Combines elements object into string Example root home user base file name file converted home user fileformat object containing some required keys formulate path string representaiton object",
	"myfs.npath.join": "join : Joins path segments resolves relativity path join asdf quux Returns asdfjoin arguments evaluated paths construction description",
	"myfs.npath.resolve": "resolve : Generates absolute path based provided arguments Path construction occurs from right left resolve yields absolute path resolved during construction items left ignored resolve yields ignored absolute path resolved after constructing arguments inserted resolve yields current working Relative paths automatically resolved resolve yieldsresolve arguments evaluated paths construction",
	"myfs.npath.removeTrailingSlash": "removeTrailingSlash : Removes trailing slash from path existsremoveTrailingSlash path",
	"myfs.npath.addTrailingSlash": "addTrailingSlash : Adds trailing slash from path doesn existaddTrailingSlash path",
	"myfs.npath.cwd": "cwd : Returns current working directoryAppends resolves resolve additional context current working directory needed example myfs will back folder example myfs will tack onto system path resolved path",
	"myfs.npath.swapExt": "swapExt : Changes path extension apply basic filename full pathswapExt original path extenion path",
	"myfs.npath.sep": "sep : kind seperator used paths Windows POSIXkind seperator used paths Windows POSIX",
	"myfs.npath.delimiter": "delimiter : Platform environment PATH delimiter Example PATH appears Windows Windows system32 Windows Program Files node Example PATH appears POSIX systems Unix sbin sbin local Read PATH with Node console process PATH Windows POSIX",
	"myfs.opn": "opn : cross platform launch files from Node Direct copy npmjs https npmjs package github https github sindresorhus USAGE const require Opens image default image viewer unicorn then image viewer closed Opens default browser http sindresorhus Specify open http sindresorhus firefox Specify arguments http sindresorhus google chrome incognitomyfs open Options",
	"more.readme": "myfs lightweight Node specific dependancy simplified cross platform methods manipulating files folders syncronously with Node Install install myfs save yarn myfs Quick Reference NOTE docs folder details this just basic listing Method Arguments Description copy dest binary Copies file from location another dest binary alias copy cpdir from Copies entire folder heirarchy folder from location another other location doesn exists will constructed empty dryRun Recursively empties folder contents folder contents leaves source folder exists Checks file folder exists launch target opts file launcher Opens stuff like websites files executables using native system program list from filter recursive store Read folder returns object containing files array dirs array Each array lists full system paths listExt from exts recursive Returns array paths files that have extension argument array return multiple extensions alias list makedir destination Creates folder specified location folder heirarchy constructed needed move Moves file folder rename Alias move open binary Reads text binary data file binary boolean argument text files Deletes file from system rmdir dryRun Recursively removes folder folders well save data binary Saves text data file Overwrites entire file with provided data write data binary Alias save isFile Checks file opposed exists which checks either file folder exists isDir Checks folder opposed exists which checks either file folder exists touch Creates updates timestamp specific file folder Path Stuff Method Arguments Description addSlash path Adds trailing slash from path doesn exist addTrailingSlash alias addSlash removeSlash path Removes trailing slash from path exists removeTrailingSlash path alias removeSlash resolve path Generates absolute path based provided arguments base name alias basename basename path Returns last portion path generally filename clean Normalizes slashes converting double single based current platform requirements alias dirname Returns bare base extension filename alias basename format Combines elements object into string opposite path parse isAbsolute Determines path absolute path join paths Joins path segments resolves relativity name path npath name normalize path Resolves portions path Reduces double slashes single Forces back slashes forward slashes Retains trailing slash exists parent path Returns path parent folder that item resides within parse path Note that this uses mind warping name basename default Node path parse plus some props that hurt brain Extracts basic path file parts root base name ext2 extension basename filename parent relative from Creates relative path between from tack Gets current working directory Resolves argument path swapExt Changes path filename extension Properties Property Description kind seperator used paths Windows POSIX delimiter Platform environment PATH delimiter Access underlaying directory utility class access additional methods that common Access underlaying file utility class access additional methods that common path Essentially same Node built path extras unified cross platform This provides access underlaying path utility class access additional methods that common Usage myfs require myfs data myfs open path file myfs save path file This contents file Open Read myfile myfs open path folder file1 Yeilds text contents file myfile myfs read path folder file1 same above Save Write myfile myfs save path folder file1 data Wites text data file myfile myfs write path folder file1 data same above Listing files from folder mylist myfs list path folder Yeilds files path folder file1 path folder file2 path folder file3 dirs path folder folder1 path folder folder2 path folder folder3 Listing only files extension mylist myfs listExt path folder Yeilds path folder file1 path folder file2 path folder file3 Listing files extension mylist myfs listExt path folder Yeilds path folder file1 path folder file2 path folder bob1 path folder bob2 Change August 2018 Check exists before attempt delete copy copies folders Added touch added filter readExt 2018 ensure exists added into couple other places fileutils fileutils write honors string binary argument added better documentation readdir filter 2018 Added swapExt License Mike Gieson"
}